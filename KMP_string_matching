/* C code for KMP String matching algorithm */
/* Created by Soumya Banerjee on 10th November, 2019 */

Code :

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
char T[100],P[100],pi[100];
void Compute_Prefix();
void KMP_Matcher()
{
    int n,m,q,i,j;
    n=strlen(T);
    m=strlen(P);
    Compute_Prefix(P);
    printf("Prefix function :\n");
    for(i=0;i<m;i++)
        printf("%d ",pi[i]);
    printf("\n");
    q=0;
    for(i=0;i<n;i++)
    {
        while(q>0 && P[q]!=T[i])
            q=pi[q-1];
        if(P[q]==T[i])
            q=q+1;
        if(q==m)
        {
            printf("\nPattern occurs with shift s = %d",i-m+1);
            q=pi[q-1];
        }
    }
}
void Compute_Prefix()
{
    int m,k,q;
    m=strlen(P);
    pi[0]=0;
    k=0;
    for(q=1;q<m;q++)
    {
        while(k>0 && P[k]!=P[q])
            k=pi[k];
        if(P[k]==P[q])
            k=k+1;
        pi[q]=k;
    }
}
int main()
{

    printf("\nEnter the text :");
    scanf("%s",T);
    printf("\nEnter the pattern :");
    scanf("%s",P);
    KMP_Matcher();
    return 0;
}


OUTPUT :

Enter the text :111122221111001111

Enter the pattern :1111
Prefix function :
0 1 2 3

Pattern occurs with shift s = 0
Pattern occurs with shift s = 8
Pattern occurs with shift s = 14
